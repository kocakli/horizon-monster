{"ast":null,"code":"var _jsxFileName = \"/Users/oguzhankocakli/Documents/GitHub/horizon-game/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css';\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\n/*\n * We pass in our characterNFT metadata so we can show a cool card in our UI\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT,\n    setCharacterNFT\n  } = _ref;\n  // State\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n  const [attackState, setAttackState] = useState('');\n  const [showToast, setShowToast] = useState(false);\n\n  const runAttackAction = async () => {\n    try {\n      if (gameContract) {\n        setAttackState('attacking');\n        console.log('Attacking boss...');\n        const attackTxn = await gameContract.attackBoss();\n        await attackTxn.wait();\n        console.log('attackTxn:', attackTxn);\n        setAttackState('hit');\n      }\n    } catch (error) {\n      console.error('Error attacking boss:', error);\n      setAttackState('');\n    }\n  }; // UseEffects\n\n\n  useEffect(() => {\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log('Boss:', bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n    /*\n    * Setup logic when this event is fired off\n    */\n\n\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n      const bossHp = newBossHp.toNumber();\n      const playerHp = newPlayerHp.toNumber();\n      console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n      /*\n      * Update both player and boss Hp\n      */\n\n      setBoss(prevState => {\n        return { ...prevState,\n          hp: bossHp\n        };\n      });\n      setCharacterNFT(prevState => {\n        return { ...prevState,\n          hp: playerHp\n        };\n      });\n    };\n\n    if (gameContract) {\n      fetchBoss();\n      gameContract.on('AttackComplete', onAttackComplete);\n    }\n    /*\n    * Make sure to clean up this event when this component is removed\n    */\n\n\n    return () => {\n      if (gameContract) {\n        gameContract.off('AttackComplete', onAttackComplete);\n      }\n    };\n  }, [gameContract]); // UseEffects\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [boss && characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toast\",\n      className: showToast ? 'show' : '',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"desc\",\n        children: `üí• ${boss.name} was hit for ${characterNFT.attackDamage}!`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), boss && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boss-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `boss-content  ${attackState}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\uD83D\\uDD25 \", boss.name, \" \\uD83D\\uDD25\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: boss.imageURI,\n            alt: `Boss ${boss.name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              value: boss.hp,\n              max: boss.maxHp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `${boss.hp} / ${boss.maxHp} HP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attack-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cta-button\",\n          onClick: runAttackAction,\n          children: `üí• Attack ${boss.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), attackState === 'attacking' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Attacking \\u2694\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), characterNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: characterNFT.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: characterNFT.imageURI,\n              alt: `Character ${characterNFT.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                value: characterNFT.hp,\n                max: characterNFT.maxHp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${characterNFT.hp} / ${characterNFT.maxHp} HP`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: `‚öîÔ∏è Attack Damage: ${characterNFT.attackDamage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arena, \"zVZrOcUIo31iAxKi63JFMys8HvA=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["/Users/oguzhankocakli/Documents/GitHub/horizon-game/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","LoadingIndicator","Arena","characterNFT","setCharacterNFT","gameContract","setGameContract","boss","setBoss","attackState","setAttackState","showToast","setShowToast","runAttackAction","console","log","attackTxn","attackBoss","wait","error","fetchBoss","bossTxn","getBigBoss","onAttackComplete","newBossHp","newPlayerHp","bossHp","toNumber","playerHp","prevState","hp","on","off","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","name","attackDamage","imageURI","maxHp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AAGA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAsC;AACjD;AACF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;;AAGF,QAAMiB,eAAe,GAAG,YAAY;AAClC,QAAI;AACF,UAAIR,YAAJ,EAAkB;AAChBK,QAAAA,cAAc,CAAC,WAAD,CAAd;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,cAAMC,SAAS,GAAG,MAAMX,YAAY,CAACY,UAAb,EAAxB;AACA,cAAMD,SAAS,CAACE,IAAV,EAAN;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,SAA1B;AACAN,QAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,KATD,CASE,OAAOS,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACAT,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAdD,CARqD,CAyBrD;;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,SAAS,GAAG,YAAY;AAC1B,YAAMC,OAAO,GAAG,MAAMhB,YAAY,CAACiB,UAAb,EAAtB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,OAArB;AACAb,MAAAA,OAAO,CAACT,sBAAsB,CAACsB,OAAD,CAAvB,CAAP;AACH,KAJD;AAMA;AACJ;AACA;;;AACI,UAAME,gBAAgB,GAAG,CAACC,SAAD,EAAYC,WAAZ,KAA4B;AACjD,YAAMC,MAAM,GAAGF,SAAS,CAACG,QAAV,EAAf;AACA,YAAMC,QAAQ,GAAGH,WAAW,CAACE,QAAZ,EAAjB;AAEAb,MAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BW,MAAO,eAAcE,QAAS,EAAtE;AAEA;AACR;AACA;;AACQpB,MAAAA,OAAO,CAAEqB,SAAD,IAAe;AACnB,eAAO,EAAE,GAAGA,SAAL;AAAgBC,UAAAA,EAAE,EAAEJ;AAApB,SAAP;AACH,OAFM,CAAP;AAIAtB,MAAAA,eAAe,CAAEyB,SAAD,IAAe;AAC3B,eAAO,EAAE,GAAGA,SAAL;AAAgBC,UAAAA,EAAE,EAAEF;AAApB,SAAP;AACH,OAFc,CAAf;AAGH,KAhBD;;AAkBA,QAAIvB,YAAJ,EAAkB;AACde,MAAAA,SAAS;AACTf,MAAAA,YAAY,CAAC0B,EAAb,CAAgB,gBAAhB,EAAkCR,gBAAlC;AACH;AAED;AACJ;AACA;;;AACI,WAAO,MAAM;AACT,UAAIlB,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAAC2B,GAAb,CAAiB,gBAAjB,EAAmCT,gBAAnC;AACH;AACJ,KAJD;AAKH,GAzCQ,EAyCN,CAAClB,YAAD,CAzCM,CAAT,CA1BqD,CAqEnD;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEsC,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAID,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAItC,MAAM,CAACuC,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMlC,YAAY,GAAG,IAAIR,MAAM,CAAC2C,QAAX,CACnB1C,gBADmB,EAEnBE,UAAU,CAACyC,GAFQ,EAGnBH,MAHmB,CAArB;AAMAhC,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAVD,MAUO;AACLS,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,eAEGR,IAAI,IAAIJ,YAAR,iBACC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,SAAS,EAAEQ,SAAS,GAAG,MAAH,GAAY,EAAhD;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,kBAAiB,MAAKJ,IAAI,CAACmC,IAAK,gBAAevC,YAAY,CAACwC,YAAa;AAAzE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EASGpC,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAG,iBAAgBE,WAAY,EAA7C;AAAA,gCACE;AAAA,sCAAQF,IAAI,CAACmC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAEnC,IAAI,CAACqC,QAAf;AAAyB,YAAA,GAAG,EAAG,QAAOrC,IAAI,CAACmC,IAAK;AAAhD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAU,cAAA,KAAK,EAAEnC,IAAI,CAACuB,EAAtB;AAA0B,cAAA,GAAG,EAAEvB,IAAI,CAACsC;AAApC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAK,GAAEtC,IAAI,CAACuB,EAAG,MAAKvB,IAAI,CAACsC,KAAM;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAEhC,eAAxC;AAAA,oBACI,aAAYN,IAAI,CAACmC,IAAK;AAD1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,EAgBGjC,WAAW,KAAK,WAAhB,iBACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,EAoCGN,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE;AAAA,wBAAKA,YAAY,CAACuC;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,GAAG,EAAEvC,YAAY,CAACyC,QADpB;AAEE,cAAA,GAAG,EAAG,aAAYzC,YAAY,CAACuC,IAAK;AAFtC;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAU,gBAAA,KAAK,EAAEvC,YAAY,CAAC2B,EAA9B;AAAkC,gBAAA,GAAG,EAAE3B,YAAY,CAAC0C;AAApD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAK,GAAE1C,YAAY,CAAC2B,EAAG,MAAK3B,YAAY,CAAC0C,KAAM;AAA/C;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAA,wBAAM,qBAAoB1C,YAAY,CAACwC,YAAa;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkED,CA1JD;;GAAMzC,K;;KAAAA,K;AA4JN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css';\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\n\n\n/*\n * We pass in our characterNFT metadata so we can show a cool card in our UI\n */\nconst Arena = ({ characterNFT, setCharacterNFT }) => {\n    // State\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n  const [attackState, setAttackState] = useState('');\n  const [showToast, setShowToast] = useState(false);\n\n\nconst runAttackAction = async () => {\n  try {\n    if (gameContract) {\n      setAttackState('attacking');\n      console.log('Attacking boss...');\n      const attackTxn = await gameContract.attackBoss();\n      await attackTxn.wait();\n      console.log('attackTxn:', attackTxn);\n      setAttackState('hit');\n    }\n  } catch (error) {\n    console.error('Error attacking boss:', error);\n    setAttackState('');\n  }\n};\n\n\n// UseEffects\nuseEffect(() => {\n    const fetchBoss = async () => {\n        const bossTxn = await gameContract.getBigBoss();\n        console.log('Boss:', bossTxn);\n        setBoss(transformCharacterData(bossTxn));\n    };\n\n    /*\n    * Setup logic when this event is fired off\n    */\n    const onAttackComplete = (newBossHp, newPlayerHp) => {\n        const bossHp = newBossHp.toNumber();\n        const playerHp = newPlayerHp.toNumber();\n\n        console.log(`AttackComplete: Boss Hp: ${bossHp} Player Hp: ${playerHp}`);\n\n        /*\n        * Update both player and boss Hp\n        */\n        setBoss((prevState) => {\n            return { ...prevState, hp: bossHp };\n        });\n\n        setCharacterNFT((prevState) => {\n            return { ...prevState, hp: playerHp };\n        });\n    };\n\n    if (gameContract) {\n        fetchBoss();\n        gameContract.on('AttackComplete', onAttackComplete);\n    }\n\n    /*\n    * Make sure to clean up this event when this component is removed\n    */\n    return () => {\n        if (gameContract) {\n            gameContract.off('AttackComplete', onAttackComplete);\n        }\n    }\n}, [gameContract]);\n\n  // UseEffects\n  useEffect(() => {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n\n  return (\n    <div className=\"arena-container\">\n      {/* Add your toast HTML right here */}\n      {boss && characterNFT && (\n        <div id=\"toast\" className={showToast ? 'show' : ''}>\n          <div id=\"desc\">{`üí• ${boss.name} was hit for ${characterNFT.attackDamage}!`}</div>\n        </div>\n      )}\n  \n      {/* Boss */}\n      {boss && (\n        <div className=\"boss-container\">\n          <div className={`boss-content  ${attackState}`}>\n            <h2>üî• {boss.name} üî•</h2>\n            <div className=\"image-content\">\n              <img src={boss.imageURI} alt={`Boss ${boss.name}`} />\n              <div className=\"health-bar\">\n                <progress value={boss.hp} max={boss.maxHp} />\n                <p>{`${boss.hp} / ${boss.maxHp} HP`}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"attack-container\">\n            <button className=\"cta-button\" onClick={runAttackAction}>\n              {`üí• Attack ${boss.name}`}\n            </button>\n          </div>\n          {attackState === 'attacking' && (\n            <div className=\"loading-indicator\">\n              <LoadingIndicator />\n              <p>Attacking ‚öîÔ∏è</p>\n            </div>\n          )}\n        </div>\n      )}\n  \n      {/* Character NFT */}\n      {characterNFT && (\n        <div className=\"players-container\">\n          <div className=\"player-container\">\n            <h2>Your Character</h2>\n            <div className=\"player\">\n              <div className=\"image-content\">\n                <h2>{characterNFT.name}</h2>\n                <img\n                  src={characterNFT.imageURI}\n                  alt={`Character ${characterNFT.name}`}\n                />\n                <div className=\"health-bar\">\n                  <progress value={characterNFT.hp} max={characterNFT.maxHp} />\n                  <p>{`${characterNFT.hp} / ${characterNFT.maxHp} HP`}</p>\n                </div>\n              </div>\n              <div className=\"stats\">\n                <h4>{`‚öîÔ∏è Attack Damage: ${characterNFT.attackDamage}`}</h4>\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"active-players\">\n            <h2>Active Players</h2>\n            <div className=\"players-list\">{renderActivePlayersList()}</div>\n          </div> */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Arena;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/oguzhankocakli/Documents/GitHub/horizon-game/src/Components/SelectCharacter/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './SelectCharacter.css';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\n/*\n * Don't worry about setCharacterNFT just yet, we will talk about it soon!\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectCharacter = _ref => {\n  _s();\n\n  let {\n    setCharacterNFT\n  } = _ref;\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null); // Render Methods\n\n  const renderCharacters = () => characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: character.imageURI,\n      alt: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"character-mint-button\",\n      onClick: () => mintCharacterNFTAction(index),\n      children: `Mint ${character.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, character.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this)); // UseEffect\n\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      /*\n       * This is the big difference. Set our gameContract in state.\n       */\n\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n  useEffect(() => {\n    const getCharacters = async () => {\n      try {\n        console.log('Getting contract characters to mint');\n        /*\n         * Call contract to get all mint-able characters\n         */\n\n        const charactersTxn = await gameContract.getAllDefaultCharacters();\n        console.log('charactersTxn:', charactersTxn);\n        /*\n         * Go through all of our characters and transform the data\n         */\n\n        const characters = charactersTxn.map(characterData => transformCharacterData(characterData));\n        /*\n         * Set all mint-able characters in state\n         */\n\n        setCharacters(characters);\n      } catch (error) {\n        console.error('Something went wrong fetching characters:', error);\n      }\n    };\n    /*\n     * If our gameContract is ready, let's get characters!\n     */\n\n\n    if (gameContract) {\n      getCharacters();\n    }\n  }, [gameContract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-character-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mint Your Hero. Choose wisely.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), characters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-grid\",\n      children: renderCharacters()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectCharacter, \"ReBpEb1ZDzzSsIn8oOlkhmevdME=\");\n\n_c = SelectCharacter;\nexport default SelectCharacter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectCharacter\");","map":{"version":3,"sources":["/Users/oguzhankocakli/Documents/GitHub/horizon-game/src/Components/SelectCharacter/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","SelectCharacter","setCharacterNFT","characters","setCharacters","gameContract","setGameContract","renderCharacters","map","character","index","name","imageURI","mintCharacterNFTAction","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi","console","log","getCharacters","charactersTxn","getAllDefaultCharacters","characterData","error","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './SelectCharacter.css';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\n\n/*\n * Don't worry about setCharacterNFT just yet, we will talk about it soon!\n */\nconst SelectCharacter = ({ setCharacterNFT }) => {\n  const [characters, setCharacters] = useState([]);\n  const [gameContract, setGameContract] = useState(null);\n  // Render Methods\nconst renderCharacters = () =>\ncharacters.map((character, index) => (\n  <div className=\"character-item\" key={character.name}>\n    <div className=\"name-container\">\n      <p>{character.name}</p>\n    </div>\n    <img src={character.imageURI} alt={character.name} />\n    <button\n      type=\"button\"\n      className=\"character-mint-button\"\n      onClick={()=> mintCharacterNFTAction(index)}\n    >{`Mint ${character.name}`}</button>\n  </div>\n));\n  // UseEffect\nuseEffect(() => {\n  const { ethereum } = window;\n\n  if (ethereum) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const gameContract = new ethers.Contract(\n      CONTRACT_ADDRESS,\n      myEpicGame.abi,\n      signer\n    );\n\n    /*\n     * This is the big difference. Set our gameContract in state.\n     */\n    setGameContract(gameContract);\n  } else {\n    console.log('Ethereum object not found');\n  }\n}, []);\nuseEffect(() => {\n  const getCharacters = async () => {\n    try {\n      console.log('Getting contract characters to mint');\n\n      /*\n       * Call contract to get all mint-able characters\n       */\n      const charactersTxn = await gameContract.getAllDefaultCharacters();\n      console.log('charactersTxn:', charactersTxn);\n\n      /*\n       * Go through all of our characters and transform the data\n       */\n      const characters = charactersTxn.map((characterData) =>\n        transformCharacterData(characterData)\n      );\n\n      /*\n       * Set all mint-able characters in state\n       */\n      setCharacters(characters);\n    } catch (error) {\n      console.error('Something went wrong fetching characters:', error);\n    }\n  };\n\n  /*\n   * If our gameContract is ready, let's get characters!\n   */\n  if (gameContract) {\n    getCharacters();\n  }\n}, [gameContract]);\n\n  return (\n    <div className=\"select-character-container\">\n    <h2>Mint Your Hero. Choose wisely.</h2>\n    {/* Only show this when there are characters in state */}\n    {characters.length > 0 && (\n      <div className=\"character-grid\">{renderCharacters()}</div>\n    )}\n  </div>\n);\n};\n\nexport default SelectCharacter;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/oguzhankocakli/Documents/GitHub/horizon-game/src/Components/Arena/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css';\n/*\n * We pass in our characterNFT metadata so we can show a cool card in our UI\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Arena = _ref => {\n  _s();\n\n  let {\n    characterNFT\n  } = _ref;\n  // State\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null); // UseEffects\n\n  useEffect(() => {\n    /*\n     * Setup async function that will get the boss from our contract and sets in state\n     */\n    const fetchBoss = async () => {\n      const bossTxn = await gameContract.getBigBoss();\n      console.log('Boss:', bossTxn);\n      setBoss(transformCharacterData(bossTxn));\n    };\n\n    if (gameContract) {\n      /*\n       * gameContract is ready to go! Let's fetch our boss\n       */\n      fetchBoss();\n    }\n  }, [gameContract]); // UseEffects\n\n  useEffect(() => {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicGame.abi, signer);\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"arena-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"BOSS GOES HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"CHARACTER NFT GOES HERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Arena, \"hffOBmb6uNS/O642ivQyNGpPgu8=\");\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["/Users/oguzhankocakli/Documents/GitHub/horizon-game/src/Components/Arena/index.js"],"names":["React","useEffect","useState","ethers","CONTRACT_ADDRESS","transformCharacterData","myEpicGame","Arena","characterNFT","gameContract","setGameContract","boss","setBoss","fetchBoss","bossTxn","getBigBoss","console","log","ethereum","window","provider","providers","Web3Provider","signer","getSigner","Contract","abi"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,gBAAT,EAA2BC,sBAA3B,QAAyD,iBAAzD;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAO,aAAP;AAEA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAG,QAAsB;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAClC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC,CAHkC,CAKpC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACF;AACA;AACE,UAAMY,SAAS,GAAG,YAAY;AAC5B,YAAMC,OAAO,GAAG,MAAML,YAAY,CAACM,UAAb,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,OAArB;AACAF,MAAAA,OAAO,CAACP,sBAAsB,CAACS,OAAD,CAAvB,CAAP;AACD,KAJD;;AAMA,QAAIL,YAAJ,EAAkB;AAChB;AACJ;AACA;AACII,MAAAA,SAAS;AACV;AACF,GAhBQ,EAgBN,CAACJ,YAAD,CAhBM,CAAT,CANoC,CAwBlC;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEiB,MAAAA;AAAF,QAAeC,MAArB;;AAEA,QAAID,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,SAAP,CAAiBC,YAArB,CAAkCJ,QAAlC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AACA,YAAMf,YAAY,GAAG,IAAIN,MAAM,CAACsB,QAAX,CACnBrB,gBADmB,EAEnBE,UAAU,CAACoB,GAFQ,EAGnBH,MAHmB,CAArB;AAMAb,MAAAA,eAAe,CAACD,YAAD,CAAf;AACD,KAVD,MAUO;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CApDD;;GAAMV,K;;KAAAA,K;AAsDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, transformCharacterData } from '../../constants';\nimport myEpicGame from '../../utils/MyEpicGame.json';\nimport './Arena.css';\n\n/*\n * We pass in our characterNFT metadata so we can show a cool card in our UI\n */\nconst Arena = ({ characterNFT }) => {\n  // State\n  const [gameContract, setGameContract] = useState(null);\n  const [boss, setBoss] = useState(null);\n\n// UseEffects\nuseEffect(() => {\n  /*\n   * Setup async function that will get the boss from our contract and sets in state\n   */\n  const fetchBoss = async () => {\n    const bossTxn = await gameContract.getBigBoss();\n    console.log('Boss:', bossTxn);\n    setBoss(transformCharacterData(bossTxn));\n  };\n\n  if (gameContract) {\n    /*\n     * gameContract is ready to go! Let's fetch our boss\n     */\n    fetchBoss();\n  }\n}, [gameContract]);\n\n  // UseEffects\n  useEffect(() => {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const gameContract = new ethers.Contract(\n        CONTRACT_ADDRESS,\n        myEpicGame.abi,\n        signer\n      );\n\n      setGameContract(gameContract);\n    } else {\n      console.log('Ethereum object not found');\n    }\n  }, []);\n\n  return (\n    <div className=\"arena-container\">\n      {/* Boss */}\n      <p>BOSS GOES HERE</p>\n\n      {/* Character NFT */}\n      <p>CHARACTER NFT GOES HERE</p>\n    </div>\n  );\n};\n\nexport default Arena;"]},"metadata":{},"sourceType":"module"}